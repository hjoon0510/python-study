

---헬로월드 출력하기--- 

>>> print('Hello, world!') 

 Hello, world! 
 >>>print('Hello, world!')<---------------| 
                                        | 
                                        | 
처럼파이썬은 세미콜론을안붙임-----------    | 

 --그리고 들여쓰기는 해야된다 


- 사칙연산 

>>> 1 + 1 

 2 


>>> 1 - 2 
-1 

>>> 2 * 2 
4 

23 

 

24 >>> 5 / 2 

25 2.5 

26 

 

27 -계산 결과를 정수, 실수로
만들기 

28 

 

29 계산식을 ( )괄호로
묶어준 뒤 앞에 int를 붙이면 결과를 정수로 만들며, float를
붙이면 실수로 만든다 

30 >>> int(5 / 2)      # 실수 2.5를 정수 2로 만듦 

31 2 

32 >>> float(1 + 2)    # 정수 3을 실수 3.0으로 만듦 

33 3.0 

34 

 

35 -변수 만들기  변수는 변수이름 = 값 형식으로
만든다. 

36 x = 10 , x = y = z = 10 

37 

 

38 

 

39 -문자열은 ' '(작은
따옴표) 또는 " "(큰 따옴표)로 묶어서 표현한다. 

40 'Hello, world!' 

41 "Hello, world!" 

42 

 

43 

 

44 -문자열 길이 구하기 

45 문자열의 길이는 len 함수로
구한다. 이때 문자열을 묶은 따옴표는 문자열 길이에 포함되지 않는다 

46 >>> len('Hello, world!') 

47 13 

48 

 

49 

 

50 -문자열을 연결하고 반복하기  

51 문자열에 +를 사용하면
문자열이 연결되고, *를 사용하면 문자열이 반복됩니다.>>>
'Hello, ' + 'world!' 

52 'Hello, world!' 

53 >>> 'Hello, ' * 3 

54 'Hello, Hello, Hello, ' 

55 

 

56 

 

57 -입력 값을 변수에 저장하기 

58 입력 값을 변수에 저장할 때는
input 함수를 사용합니다. 여기서 input을
그대로 사용하면 문자열로 저장되고, input을 int로
묶어주면 정수, float로 묶어주면 실수로 저장합니다.s =
input()           # 입력값을 문자열로 저장 

59 a = int(input())      # 입력값을 정수로 저장 

60 b = float(input())    # 입력값을 실수로 저장 

61 

 

62 -값을 여러 개 출력하기print
함수로 값을 여러 개 출력하려면 변수나 값을 ,(콤마)로
구분해서 넣어줍니다. 

63 >>> print(1, 2, 3) 

64 1 2 3 

65 print 함수의 출력 방식 제어하기print 함수의 sep에 문자(문자열)를 지정하면 값 사이에 문자(문자열)를
넣어줍니다. 

66 >>> print(1, 2, 3, sep=',
')    # 값 사이에 ,와
공백 출력 

67 1, 2, 3 

68 

 

69 -print 함수의 end에  

70 개행 문자(줄바꿈
문자) 

71 문자열에서 제어 문자 \n을
사용하면 다음 줄로 넘어갑니다. 

72 >>> print('1\n2\n3')    # \n을 사용하면 다음 줄로 넘어감 

73 1 

74 2 

75 3 

76 

 

77 

 

78 -괄호 사용하기식에서 덧셈, 뺄셈, 곱셈, 나눗셈이 함께 있을 때는 곱셈과 나눗셈부터 계산합니다.  

79 만약 곱셈보다 덧셈을 먼저 계산하고 싶다면 덧셈 부분을 ( )(괄호)로 묶어줍니다. 

80 >>> (35 + 1) * 2 

81 72 

82 

 

83 -특정 조건일 때 코드를 실행하기if 조건문에 조건식을 지정하면 해당 조건이 만족할 때만 코드를 실행할 수 있습니다.if 조건식: 

84    
코드    # 조건식이
만족할 때 코드 실행 

85 두 방향으로 분기하기if와 else를 사용하면 조건식이 만족할 때와 만족하지 않을 때 각각 다른 코드를 실행할 수 있습니다.if 조건식: 

86    
코드1    # 조건식이
만족할 때 코드 실행 

87 else: 

88    
코드2    # 조건식이
만족하지 않을 때 코드 실행 

89 

 

90 -여러 방향으로 분기하기elif는
여러 개의 조건식을 지정하여 각각 다른 코드를 실행할 수 있습니다.if 조건식1: 

91    
코드1    # 조건식1이 만족할 때 코드 실행 

92 elif 조건식2: 

93    
코드2    # 조건식2가 만족할 때 코드 실행 

94 elif 조건식3: 

95    
코드3    # 조건식3이 만족할 때 코드 실행 

96 else: 

97    
코드4    # 아무
조건에도 만족하지 않을 때 코드 실행 

98 

 

99 

 

100 -반복할 횟수를 지정하여 반복하기 

101 for 반복문은 반복할 횟수를 지정하여 반복할 수 있습니다. range에 반복할 횟수를 지정하고 앞에 in과 변수를 지정합니다.for 변수 in range(횟수):


102    
반복할 코드 

103 

 

104 

 

105 반복문 끝내기반복문에서
break를 사용하면 반복문을 끝낼 수 있습니다.while 조건식1: 

106    
if 조건식2: 

107        
break    # 반복문을 끝냄 

108 

 

109 

 

110 중첩 루프반복문 안에 반복문이 들어 있는 형태를 중첩 루프라고
하며 루프 인덱스 변수는 i부터 순서대로 짓습니다.예) i, j, k중첩 루프는 주로 가로×세로 형태로 된 2차원 평면을 다룰 때 사용합니다for i in range(10):        # 바깥쪽 루프 

111    
for j in range(10):    # 안쪽
루프 

112        
pass 

113 

 

114 

 

115 -리스트 

116 리스트는 여러 개의 값(요소)을 일렬로 늘어놓은 형태입니다. 변수에 값을 저장할 때 [ ](대괄호)로 묶어주면 리스트가 되며 각 값은 ,(콤마)로 구분합니다. 리스트에
저장된 값(요소)에 접근할 때는 [ ] 안에 인덱스를 지정해줍니다. 특히 리스트의 인덱스는 0부터 시작합니다.리스트 = [값, 값, 값]       # 리스트 만들기 

117 리스트 = []                 # 빈 리스트 만들기 

118 리스트 =
list()             # 빈 리스트 만들기 

119  


120 리스트[인덱스]              # 리스트의 요소에
접근 

121 리스트[0]                   # 리스트의 인덱스는 0부터 시작하므로 첫 번째 요소 

122 리스트[인덱스] = 값        
# 리스트의 요소에 값 저장 

123  


124 len(리스트)                 # 리스트의 요소 개수(길이) 구하기 

125 

 

126 

 

127 -2차원 리스트(튜플) 

128 2차원 리스트(튜플)는 가로×세로의 평면 구조로 이루어져 있습니다. 2차원 리스트는 리스트 안에 리스트를 넣어서 만들 수 있으며 안쪽의 각 리스트는 ,(콤마)로 구분해줍니다. 2차원
리스트의 요소에 접근하거나 할당할 때는 리스트에 [ ](대괄호)를
두 번 사용하며 [ ] 안에 세로 인덱스와 가로 인덱스를 지정해줍니다.
일반적으로 2차원 공간은 가로×세로로 표기하지만
리스트로 만들 때는 세로×가로로 표기합니다.리스트 = [[값, 값], [값, 값], [값, 값]]    # 2차원 리스트 만들기 

129  


130 리스트[세로인덱스][가로인덱스]         # 2차원 리스트의 요소에 접근 

131 리스트[세로인덱스][가로인덱스] = 값    # 2차원 리스트의 요소에 값 저장(튜플은
요소에 값 저장 불가) 

132  


133 리스트 = [(값, 값), (값, 값), (값, 값)]    # 리스트 안에 튜플을 넣음 

134 튜플 = ([값, 값], [값, 값], [값, 값])      # 튜플 안에 리스트를 넣음 

135 튜플 = ((값, 값), (값, 값), (값, 값))      # 튜플 안에 튜플을 넣음 

136 

 

137 

 

138 -3차원 리스트(튜플) 

139 3차원 리스트(튜플)는 높이×세로×가로 형태로
이루어져 있습니다. 3차원 공간은 가로×세로×높이로 표기하지만 리스트로 만들 때는 높이×세로×가로로 표기합니다.리스트 = [[[값, 값], [값, 값]], [[값, 값], [값, 값]], [[값, 값], [값, 값]]]    # 3차원 리스트 만들기 

140  


141 리스트[높이인덱스][세로인덱스][가로인덱스]         # 3차원 리스트의 요소에 접근 

142 리스트[높이인덱스][세로인덱스][가로인덱스] = 값    # 3차원 리스트의 요소에 값 저장 

143                                                   
# (튜플은 요소에 값 저장 불가)

